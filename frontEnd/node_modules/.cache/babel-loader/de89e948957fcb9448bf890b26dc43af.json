{"ast":null,"code":"var _jsxFileName = \"/Users/fokpoonkai/WebstormProjects/rental_apartment/src/conponents/Proprietor/P_Welcome/P_Welcome.js\";\nimport React, { Component } from 'react';\nimport { Button, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './P_Welcome.css';\nimport * as actions from '../../../action/action';\n\nclass P_Welcome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeLoginHandler = () => {\n      document.querySelector('.pw_login').style.display = 'none';\n    };\n\n    this.openLoginHandler = () => {\n      document.querySelector('.pw_login').style.display = 'flex';\n    };\n\n    this.usernameHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.summitHandler = () => {\n      if (this.state.username === \"\") {\n        this.setState({\n          warningmessage: \"username can't be empty\"\n        });\n      } else if (this.state.password === \"\") {\n        this.setState({\n          warningmessage: \"password can't be empty\"\n        });\n      } else {\n        axios.post('http://localhost:5000/proprietor/login', {\n          username: this.state.username,\n          password: this.state.password\n        }).then(response => {\n          var hasUser = response.data.hasUser;\n\n          if (!hasUser) {\n            this.setState({\n              warningmessage: \"we don't have this user\"\n            });\n          } else {\n            this.props.get_P_User(response.data.username);\n            this.props.get_P_Token(response.data.token);\n            this.setState({\n              redirect\n            });\n          }\n        }).then(() => {\n          if (this.state.redirect) {}\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      warningmessage: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Welcome Proprietor\"), React.createElement(Button, {\n      className: \"pw_button\",\n      onClick: this.openLoginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"login\"), React.createElement(Button, {\n      className: \"pw_button\",\n      href: \"/porpritor/reg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      className: \"pw_button\",\n      href: \"/porpritor/form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"div\", {\n      className: \"pw_login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pw_login_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"close_x\",\n      onClick: this.closeLoginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.redirect), React.createElement(Input, {\n      className: \"pw_login_content_input\",\n      placeholder: \"username\",\n      type: \"text\",\n      onChange: this.usernameHandler,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Input, {\n      className: \"pw_login_content_input\",\n      placeholder: \"password\",\n      type: \"password\",\n      onChange: this.passwordHandler,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"pw_login_content_input\",\n      color: \"primary\",\n      onClick: this.summitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Summit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get_P_User: event => dispatch({\n      type: actions.GET_P_USER,\n      name: event\n    }),\n    get_P_Token: event => dispatch({\n      type: actions.GET_P_TOKEN,\n      value: event\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(P_Welcome);","map":{"version":3,"sources":["/Users/fokpoonkai/WebstormProjects/rental_apartment/src/conponents/Proprietor/P_Welcome/P_Welcome.js"],"names":["React","Component","Button","Input","connect","Link","axios","actions","P_Welcome","constructor","props","closeLoginHandler","document","querySelector","style","display","openLoginHandler","usernameHandler","e","setState","username","target","value","passwordHandler","password","summitHandler","state","warningmessage","post","then","response","hasUser","data","get_P_User","get_P_Token","token","redirect","catch","err","console","log","render","mapDispatchToProps","dispatch","event","type","GET_P_USER","name","GET_P_TOKEN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Button,Input} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\n\n\nimport axios from 'axios';\nimport './P_Welcome.css'\nimport * as actions from'../../../action/action'\n\nclass P_Welcome extends Component {\n\n    constructor(props)\n    {\n      super(props);\n      this.state =\n      {\n         username: \"\",\n         password:\"\",\n         warningmessage: \"\",\n         redirect: false\n      }\n    }\n  \n      closeLoginHandler= ()=>\n      {\n          document.querySelector('.pw_login').style.display = 'none';\n      }\n  \n      openLoginHandler= ()=>{\n          document.querySelector('.pw_login').style.display = 'flex';\n      }\n  \n      usernameHandler = (e) =>{\n          this.setState({username: e.target.value});\n      }\n  \n      passwordHandler = (e)=>\n      {\n          this.setState({password: e.target.value})\n      }\n\n      //redirect\n \n\n      summitHandler = ()=>{\n          if(this.state.username ===\"\"){\n              this.setState({warningmessage:\"username can't be empty\"})\n          }\n          else if(this.state.password ===\"\")\n          {\n              this.setState({warningmessage:\"password can't be empty\"})\n          }\n          else\n          {\n              axios.post('http://localhost:5000/proprietor/login',{\n                  username: this.state.username,\n                  password: this.state.password\n              })\n              .then((response)=>{\n                  var hasUser = response.data.hasUser;\n                  if(!hasUser)\n                  {\n                      this.setState({warningmessage: \"we don't have this user\"})\n                  }\n                  else\n                  {\n                      \n                    this.props.get_P_User(response.data.username);\n                    this.props.get_P_Token(response.data.token);\n                    this.setState({redirect})\n                  }\n              })\n              .then(()=>{\n                if(this.state.redirect){\n\n                }\n              })\n              .catch((err)=>{\n                  console.log(err);\n              })\n          }\n        }\n\n      render() {\n          return (\n              <div>\n                  <h1>\n                      Welcome Proprietor\n                  </h1>\n                  <Button className=\"pw_button\" onClick={this.openLoginHandler}>login</Button>\n                  <Button className=\"pw_button\" href=\"/porpritor/reg\">Register</Button>\n                  <Button className=\"pw_button\" href=\"/porpritor/form\">From</Button>\n                  \n                  {/** Login content */}\n                  <div className=\"pw_login\">\n                  <div className=\"pw_login_content\">\n                      <div className=\"close\"><p className=\"close_x\" onClick={this.closeLoginHandler}>+</p></div>\n                      <h2>Login</h2>\n                      <p>{this.state.redirect}</p>\n                      <Input className=\"pw_login_content_input\" placeholder=\"username\" type=\"text\" onChange={this.usernameHandler} value={this.state.username}></Input>\n                      <Input className=\"pw_login_content_input\" placeholder=\"password\" type=\"password\" onChange={this.passwordHandler} value={this.state.password}></Input>\n                      <Button className=\"pw_login_content_input\" color=\"primary\" onClick={this.summitHandler}>Summit</Button>\n                  </div>\n                      </div>\n              </div>\n          )\n      }\n  }\n  const mapDispatchToProps=(dispatch)=>\n  {\n      return{\n      get_P_User : (event) =>dispatch({type: actions.GET_P_USER,name: event}),\n      get_P_Token: (event)=>dispatch({type: actions.GET_P_TOKEN,value : event})\n      }\n  }\n  \n  export default connect (null,mapDispatchToProps)(P_Welcome);"]},"metadata":{},"sourceType":"module"}