{"ast":null,"code":"var _jsxFileName = \"/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/WelcomePage/Login_Conponent/Login_Conponent.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios';\nimport \"./Login_Conponent.css\";\nimport * as type from \"../../../type/type\";\nexport class Pro_Login_Conponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernameHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.passworkHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.LoginHandler = () => {\n      this.setState({\n        spinner: true\n      });\n\n      if (this.state.username === \"\") {\n        this.setState({\n          spinner: false\n        });\n        this.setState({\n          warningmessage: \"username can't be empty\"\n        });\n      } else if (this.state.password === \"\") {\n        this.setState({\n          spinner: false\n        });\n        this.setState({\n          warningmessage: \"password can't be empty\"\n        });\n      } else {\n        if (this.props.name === type.Proprietor) {\n          this.proprietorLoginHandler();\n        } else {\n          this.tenantLoginHandler();\n        }\n      }\n    };\n\n    this.proprietorLoginHandler = () => {\n      axios.post('/api/proprietor/login', {\n        username: this.state.username,\n        password: this.state.password\n      }).then(response => {\n        //return from back-end\n        var hasUser = response.data.hasUser;\n        console.log(hasUser);\n\n        if (!hasUser) {\n          this.setState({\n            spinner: false\n          });\n          this.setState({\n            warningmessage: \"we don't have this user\"\n          });\n        } else {\n          this.setState({\n            spinner: false\n          });\n          sessionStorage.setItem(\"type\", type.Proprietor);\n          localStorage.setItem(\"p_username\", response.data.username);\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.tenantLoginHandler = () => {\n      axios.post('/api/tenant/login', {\n        username: this.state.username,\n        password: this.state.password\n      }).then(response => {\n        //return from back-end\n        var hasUser = response.data.hasUser;\n        console.log(hasUser);\n\n        if (!hasUser) {\n          this.setState({\n            spinner: false\n          });\n          this.setState({\n            warningmessage: \"we don't have this user\"\n          });\n        } else {\n          //this.props.get_P_User(response.data.username);\n          //this.props.get_P_Token(response.data.token);\n          this.setState({\n            spinner: false\n          });\n          localStorage.setItem(\"type\", type.Tenant);\n          localStorage.setItem(\"p_username\", response.data.username);\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirect: false,\n      warningmessage: \"\",\n      usertype: \"\",\n      hasUser: false,\n      spinner: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pro_login_conponenet_bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/porpritor/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.props.name, \" Login\"), React.createElement(\"input\", {\n      className: \"pro_login_conponenet_input\",\n      placeholder: \"Username\",\n      type: \"text\",\n      onChange: this.usernameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"pro_login_conponenet_input\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.passworkHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.warningmessage), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.spinner ? React.createElement(Spinner, {\n      size: \"sm\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : \" \"), this.state.usertype, React.createElement(\"button\", {\n      className: \"pro_login_conponenet_button\",\n      onClick: this.LoginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"button\", {\n      className: \"pro_login_conponenet_button\",\n      onClick: this.props.childTroggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Signup\"));\n  }\n\n}\nexport default Pro_Login_Conponent;","map":{"version":3,"sources":["/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/WelcomePage/Login_Conponent/Login_Conponent.js"],"names":["React","Component","Redirect","Spinner","axios","type","Pro_Login_Conponent","constructor","props","usernameHandler","event","setState","username","target","value","passworkHandler","password","LoginHandler","spinner","state","warningmessage","name","Proprietor","proprietorLoginHandler","tenantLoginHandler","post","then","response","hasUser","data","console","log","sessionStorage","setItem","localStorage","redirect","catch","err","Tenant","usertype","render","childTroggle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport { Spinner} from 'reactstrap'\nimport axios from 'axios';\nimport \"./Login_Conponent.css\";\n\nimport * as type from \"../../../type/type\"\n\nexport class Pro_Login_Conponent extends Component {\n    \n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            username: \"\",\n            password:\"\",\n            redirect: false,\n            warningmessage:\"\",\n            usertype: \"\",\n            hasUser:false,\n            spinner: false      \n        }\n    }\n\n    usernameHandler = ( event ) =>\n    {\n        this.setState({username : event.target.value})\n    }\n\n    passworkHandler = ( event ) =>\n    {\n        this.setState({password : event.target.value})\n    }\n\n    LoginHandler = () =>\n    {\n        this.setState({ spinner: true })\n        if(this.state.username ===\"\"){\n            this.setState({ spinner: false });\n            this.setState({warningmessage:\"username can't be empty\"})\n        }\n        else if(this.state.password ===\"\")\n        {\n            this.setState({ spinner: false });\n            this.setState({warningmessage:\"password can't be empty\"})\n        }\n        else\n        {\n            if(this.props.name === type.Proprietor)\n            {\n            this.proprietorLoginHandler();\n            }\n            else\n            {\n                this.tenantLoginHandler();\n            }\n        }\n    }\n\n    //PropietorLogin\n    proprietorLoginHandler = () =>{\n        axios.post('/api/proprietor/login',{\n            username: this.state.username,\n            password: this.state.password\n        })\n        .then((response)=>{//return from back-end\n            var hasUser = response.data.hasUser;\n            console.log(hasUser)\n            if(!hasUser)\n            {\n                this.setState({ spinner: false })\n                this.setState({warningmessage: \"we don't have this user\"})\n            }\n            else\n            {            \n              this.setState({ spinner: false })\n              sessionStorage.setItem(\"type\",type.Proprietor)\n              localStorage.setItem(\"p_username\" ,response.data.username)\n              this.setState({redirect : true})\n          }\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    //TenantLogin\n    tenantLoginHandler = () =>{\n        axios.post('/api/tenant/login',{\n            username: this.state.username,\n            password: this.state.password\n        })\n        .then((response)=>{//return from back-end\n            var hasUser = response.data.hasUser;\n            console.log(hasUser)\n            if(!hasUser)\n            {\n                this.setState({ spinner: false })\n                this.setState({warningmessage: \"we don't have this user\"})\n            }\n            else\n            {            \n              //this.props.get_P_User(response.data.username);\n              //this.props.get_P_Token(response.data.token);\n              this.setState({ spinner: false })\n              localStorage.setItem(\"type\",type.Tenant);\n              localStorage.setItem(\"p_username\" ,response.data.username);\n              this.setState({redirect : true})\n          }\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"pro_login_conponenet_bg\">\n               \n               {(this.state.redirect)?<Redirect to=\"/porpritor/dashboard\"/>:null}\n                <h3 >{this.props.name} Login</h3>\n                <input className=\"pro_login_conponenet_input\" placeholder=\"Username\" type=\"text\" onChange={this.usernameHandler}></input>\n                <br/>\n                <input className=\"pro_login_conponenet_input\" placeholder=\"Password\" type=\"password\" onChange={this.passworkHandler}></input>\n                <br/>\n                <p>{this.state.warningmessage}</p>\n                <p>{(this.state.spinner)?<Spinner size=\"sm\" color=\"primary\" />:\" \"}</p>\n                {this.state.usertype}\n                <button className=\"pro_login_conponenet_button\" onClick={this.LoginHandler}>Login</button>\n                <button className=\"pro_login_conponenet_button\" onClick={this.props.childTroggle}>Signup</button>\n            </div>\n        )\n    }\n}\n\nexport default Pro_Login_Conponent\n"]},"metadata":{},"sourceType":"module"}