{"ast":null,"code":"var _jsxFileName = \"/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/WelcomePage/Pro_Login_Conponent/Pro_Login_Conponent.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios';\nimport \"./Pro_Login_Conponent.css\";\nexport class Pro_Login_Conponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernameHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.passworkHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.LoginHandler = () => {\n      this.setState({\n        spinner: true\n      });\n\n      if (this.state.username === \"\") {\n        this.setState({\n          spinner: false\n        });\n        this.setState({\n          warningmessage: \"username can't be empty\"\n        });\n      } else if (this.state.password === \"\") {\n        this.setState({\n          spinner: false\n        });\n        this.setState({\n          warningmessage: \"password can't be empty\"\n        });\n      } else {\n        axios.post('/api/proprietor/login', {\n          username: this.state.username,\n          password: this.state.password\n        }).then(response => {\n          //return from back-end\n          var hasUser = response.data.hasUser;\n          console.log(hasUser);\n\n          if (!hasUser) {\n            this.setState({\n              spinner: false\n            });\n            this.setState({\n              warningmessage: \"we don't have this user\"\n            });\n          } else {\n            //this.props.get_P_User(response.data.username);\n            //this.props.get_P_Token(response.data.token);\n            this.setState({\n              spinner: false\n            });\n            localStorage.setItem(\"p_username\", response.data.username);\n            this.setState({\n              redirect: true\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirect: false,\n      warningmessage: \"\",\n      usertype: \"\",\n      hasUser: false,\n      spinner: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pro_login_conponenet_bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/porpritor/p_dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.name, \" Login\"), React.createElement(\"input\", {\n      className: \"pro_login_conponenet_input\",\n      placeholder: \"Username\",\n      type: \"text\",\n      onChange: this.usernameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"pro_login_conponenet_input\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.passworkHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.warningmessage), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.spinner ? React.createElement(Spinner, {\n      size: \"sm\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : \" \"), this.state.usertype, React.createElement(\"button\", {\n      className: \"pro_login_conponenet_button\",\n      onClick: this.LoginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"button\", {\n      className: \"pro_login_conponenet_button\",\n      onClick: this.props.childTroggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(\"button\", {\n      className: \"pro_login_conponenet_button\",\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"test\"));\n  }\n\n}\nexport default Pro_Login_Conponent;","map":{"version":3,"sources":["/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/WelcomePage/Pro_Login_Conponent/Pro_Login_Conponent.js"],"names":["React","Component","Redirect","Spinner","axios","Pro_Login_Conponent","constructor","props","usernameHandler","event","setState","username","target","value","passworkHandler","password","LoginHandler","spinner","state","warningmessage","post","then","response","hasUser","data","console","log","localStorage","setItem","redirect","catch","err","usertype","render","name","childTroggle","test"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AAEA,OAAO,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAE/CK,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAcAC,eAdA,GAcoBC,KAAF,IAClB;AACI,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAGF,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;AACH,KAjBD;;AAAA,SAmBAC,eAnBA,GAmBoBL,KAAF,IAClB;AACI,WAAKC,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAGN,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;AACH,KAtBD;;AAAA,SAwBAG,YAxBA,GAwBe,MACf;AACI,WAAKN,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAG,KAAKC,KAAL,CAAWP,QAAX,KAAuB,EAA1B,EAA6B;AACzB,aAAKD,QAAL,CAAc;AAAEO,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKP,QAAL,CAAc;AAACS,UAAAA,cAAc,EAAC;AAAhB,SAAd;AACH,OAHD,MAIK,IAAG,KAAKD,KAAL,CAAWH,QAAX,KAAuB,EAA1B,EACL;AACI,aAAKL,QAAL,CAAc;AAAEO,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKP,QAAL,CAAc;AAACS,UAAAA,cAAc,EAAC;AAAhB,SAAd;AACH,OAJI,MAML;AACIf,QAAAA,KAAK,CAACgB,IAAN,CAAW,uBAAX,EAAmC;AAC/BT,UAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWP,QADU;AAE/BI,UAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWH;AAFU,SAAnC,EAICM,IAJD,CAIOC,QAAD,IAAY;AAAC;AACf,cAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcD,OAA5B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,cAAG,CAACA,OAAJ,EACA;AACI,iBAAKb,QAAL,CAAc;AAAEO,cAAAA,OAAO,EAAE;AAAX,aAAd;AACA,iBAAKP,QAAL,CAAc;AAACS,cAAAA,cAAc,EAAE;AAAjB,aAAd;AACH,WAJD,MAMA;AACE;AACA;AACA,iBAAKT,QAAL,CAAc;AAAEO,cAAAA,OAAO,EAAE;AAAX,aAAd;AACAU,YAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCN,QAAQ,CAACE,IAAT,CAAcb,QAAjD;AACA,iBAAKD,QAAL,CAAc;AAACmB,cAAAA,QAAQ,EAAG;AAAZ,aAAd;AACH;AACF,SApBD,EAqBCC,KArBD,CAqBQC,GAAD,IAAO;AACVN,UAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,SAvBD;AAwBH;AACJ,KA/DD;;AAEI,SAAKb,KAAL,GACA;AACIP,MAAAA,QAAQ,EAAE,EADd;AAEII,MAAAA,QAAQ,EAAC,EAFb;AAGIc,MAAAA,QAAQ,EAAE,KAHd;AAIIV,MAAAA,cAAc,EAAC,EAJnB;AAKIa,MAAAA,QAAQ,EAAE,EALd;AAMIT,MAAAA,OAAO,EAAC,KANZ;AAOIN,MAAAA,OAAO,EAAE;AAPb,KADA;AAUH;;AAuDDgB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKf,KAAL,CAAWW,QAAZ,GAAsB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAA8D,IAFlE,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKtB,KAAL,CAAW2B,IAAjB,WAHJ,EAII;AAAO,MAAA,SAAS,EAAC,4BAAjB;AAA8C,MAAA,WAAW,EAAC,UAA1D;AAAqE,MAAA,IAAI,EAAC,MAA1E;AAAiF,MAAA,QAAQ,EAAE,KAAK1B,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAO,MAAA,SAAS,EAAC,4BAAjB;AAA8C,MAAA,WAAW,EAAC,UAA1D;AAAqE,MAAA,IAAI,EAAC,UAA1E;AAAqF,MAAA,QAAQ,EAAE,KAAKM,eAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKI,KAAL,CAAWC,cAAf,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWD,OAAZ,GAAqB,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAmB,MAAA,KAAK,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA2D,GAA/D,CATJ,EAUK,KAAKC,KAAL,CAAWc,QAVhB,EAWI;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKhB,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,EAYI;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAW4B,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAaI;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CADJ;AAiBH;;AAxF8C;AA2FnD,eAAe/B,mBAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport { Spinner} from 'reactstrap'\nimport axios from 'axios';\nimport \"./Pro_Login_Conponent.css\";\n\nexport class Pro_Login_Conponent extends Component {\n    \n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            username: \"\",\n            password:\"\",\n            redirect: false,\n            warningmessage:\"\",\n            usertype: \"\",\n            hasUser:false,\n            spinner: false      \n        }\n    }\n\n    usernameHandler = ( event ) =>\n    {\n        this.setState({username : event.target.value})\n    }\n\n    passworkHandler = ( event ) =>\n    {\n        this.setState({password : event.target.value})\n    }\n\n    LoginHandler = () =>\n    {\n        this.setState({ spinner: true })\n        if(this.state.username ===\"\"){\n            this.setState({ spinner: false });\n            this.setState({warningmessage:\"username can't be empty\"})\n        }\n        else if(this.state.password ===\"\")\n        {\n            this.setState({ spinner: false });\n            this.setState({warningmessage:\"password can't be empty\"})\n        }\n        else\n        {\n            axios.post('/api/proprietor/login',{\n                username: this.state.username,\n                password: this.state.password\n            })\n            .then((response)=>{//return from back-end\n                var hasUser = response.data.hasUser;\n                console.log(hasUser)\n                if(!hasUser)\n                {\n                    this.setState({ spinner: false })\n                    this.setState({warningmessage: \"we don't have this user\"})\n                }\n                else\n                {            \n                  //this.props.get_P_User(response.data.username);\n                  //this.props.get_P_Token(response.data.token);\n                  this.setState({ spinner: false })\n                  localStorage.setItem(\"p_username\" ,response.data.username)\n                  this.setState({redirect : true})\n              }\n            })\n            .catch((err)=>{\n                console.log(err);\n            })\n        }\n    }\n\n    pro\n\n    render() {\n        return (\n            <div className=\"pro_login_conponenet_bg\">\n               \n               {(this.state.redirect)?<Redirect to=\"/porpritor/p_dashboard\"/>:null}\n                <h3 >{this.props.name} Login</h3>\n                <input className=\"pro_login_conponenet_input\" placeholder=\"Username\" type=\"text\" onChange={this.usernameHandler}></input>\n                <br/>\n                <input className=\"pro_login_conponenet_input\" placeholder=\"Password\" type=\"password\" onChange={this.passworkHandler}></input>\n                <br/>\n                <p>{this.state.warningmessage}</p>\n                <p>{(this.state.spinner)?<Spinner size=\"sm\" color=\"primary\" />:\" \"}</p>\n                {this.state.usertype}\n                <button className=\"pro_login_conponenet_button\" onClick={this.LoginHandler}>Login</button>\n                <button className=\"pro_login_conponenet_button\" onClick={this.props.childTroggle}>Signup</button>\n                <button className=\"pro_login_conponenet_button\" onClick={this.test}>test</button>\n            </div>\n        )\n    }\n}\n\nexport default Pro_Login_Conponent\n"]},"metadata":{},"sourceType":"module"}