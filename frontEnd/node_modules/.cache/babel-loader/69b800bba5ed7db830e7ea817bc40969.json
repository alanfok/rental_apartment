{"ast":null,"code":"var _jsxFileName = \"/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/Dashboard/Dasboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as types from '../../type/type';\nimport { Table } from 'reactstrap';\nimport axios from 'axios';\n\nclass P_Dasboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      sessionStorage.removeItem(\"p_username\");\n      sessionStorage.removeItem(\"type\");\n      this.props.history.push('/');\n    };\n\n    this.DeleteApt = id => {\n      alert(id);\n    };\n\n    this.aptList = () => {\n      const list = this.state.apartment.map(apartment => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, apartment.apt, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, apartment.street), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.DeleteApt(apartment.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"x\"))));\n      return React.createElement(Table, {\n        dark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"apt\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"street\")), list);\n    };\n\n    this.state = {\n      p_username: localStorage.getItem(\"p_username\"),\n      type: sessionStorage.getItem(\"type\"),\n      apartment: []\n    };\n  }\n\n  componentWillMount() {\n    axios.post('/api/proprietor/fetch', {\n      owner: sessionStorage.getItem(\"p_username\")\n    }).then(response => {\n      this.setState({\n        apartment: response.data.apt\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const type = sessionStorage.getItem(\"type\");\n    const username = sessionStorage.getItem(\"p_username\");\n\n    if (type === null && username === null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"It's only access for house owner\"));\n    } else {\n      if (this.state.type === types.Proprietor) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, this.state.type, \"Dasboard\"), this.state.p_username, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, this.aptList()), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.logout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Logout\"), React.createElement(Link, {\n          to: \"/porpritor/form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Register Apartment\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, this.state.type, \"Dasboard\"), this.state.p_username, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.logout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Logout\"));\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    p_username: store.proprietor.name\n  };\n};\n\nexport default connect(mapStateToProps)(P_Dasboard);","map":{"version":3,"sources":["/Users/fokpoonkai/WebstormProjects/rental_apartment/frontEnd/src/conponents/Dashboard/Dasboard.js"],"names":["React","Component","connect","Link","types","Table","axios","P_Dasboard","constructor","props","logout","sessionStorage","removeItem","history","push","DeleteApt","id","alert","aptList","list","state","apartment","map","apt","street","p_username","localStorage","getItem","type","componentWillMount","post","owner","then","response","setState","data","catch","err","console","log","componentDidMount","render","username","Proprietor","mapStateToProps","store","proprietor","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport * as types from '../../type/type'\nimport {Table} from 'reactstrap'\n\n\nimport axios from 'axios'\n\n\nclass P_Dasboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            p_username : localStorage.getItem(\"p_username\"),\n            type: sessionStorage.getItem(\"type\"),\n            apartment: []\n        }\n    }\n\n    componentWillMount()\n    {\n        axios.post('/api/proprietor/fetch',{\n            owner: sessionStorage.getItem(\"p_username\")\n        })\n        .then((response)=>{\n            this.setState({apartment: response.data.apt})\n        })\n        .catch((err)=>console.log(err))\n    }\n\n    logout = () =>{\n        sessionStorage.removeItem(\"p_username\");\n        sessionStorage.removeItem(\"type\")\n        this.props.history.push('/');\n    }\n\n    DeleteApt = (id)=>{\n        alert(id);\n    }\n\n    aptList=()=>{\n        const list = this.state.apartment.map((apartment)=>\n            <tr>\n                <td>{apartment.apt} </td>\n                <td>{apartment.street}</td>\n                <td><button onClick={()=>this.DeleteApt(apartment.id)}>x</button></td>\n            </tr>\n        );\n        return(\n            <Table dark>\n                <tr>\n                <td>apt</td>\n                <td>street</td>\n                </tr>\n            {list}</Table>\n        )\n    }\n\n    componentDidMount(){\n      \n    }\n\n    \n\n    render() {\n \n        const type = sessionStorage.getItem(\"type\")\n        const username = sessionStorage.getItem(\"p_username\")\n        if(type ===null&&username===null)\n        {\n            return(\n                <div>\n                    <h1>It's only access for house owner</h1>\n                </div>\n            )\n        }\n       else\n       {\n           if(this.state.type === types.Proprietor)\n            {\n                return (\n                <div>\n                    <h1>{this.state.type}Dasboard</h1>\n                    {this.state.p_username}\n                    <div>\n                    {this.aptList()}\n                    </div>\n                    \n                    <br/>\n                    <button onClick={this.logout}>Logout</button>\n                    <Link to=\"/porpritor/form\"><button>Register Apartment</button></Link>\n                </div>\n                )\n            }\n            else\n            {\n                return(\n                    <div>\n                    <h1>{this.state.type}Dasboard</h1>\n                    {this.state.p_username}\n                    <br/>\n                    <button onClick={this.logout}>Logout</button>\n                </div>\n                )\n            }\n        \n\n    }\n\n    }\n}\n\n\n\n\nconst mapStateToProps = (store) =>{\n    return{\n        p_username:store.proprietor.name\n    }\n}\n\nexport default connect(mapStateToProps)(P_Dasboard);\n"]},"metadata":{},"sourceType":"module"}